{"version":3,"sources":["context.js","components/Header.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","photos","setPhotos","cartItems","setCartItems","useEffect","fetch","then","response","json","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeToCart","img","newCartItems","filter","item","emptyCart","Header","useContext","to","length","undefined","className","CartItem","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","key","setTimeout","console","log","Image","some","getClass","i","Photos","allImages","App","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c964d808.chunk.js","sourcesContent":["//import react and its hooks\nimport React, { useState, useEffect } from 'react';\n\n//create react context\nconst Context = React.createContext();\n\n//functional component that renders the provider context\nfunction ContextProvider({ children }) {\n\n  //use state hook that allow us to have state into a functional component\n  const [photos, setPhotos] = useState([])\n  const [cartItems, setCartItems] = useState([])\n\n  //const for url\n  const url = 'https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json'\n\n  //use effect hook that allow us to have component life cycle into a functional component\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => setPhotos(json));\n  }, []);\n\n  //toggleFavorite function\n  function toggleFavorite(id) {\n    const updatedArr = photos.map(photo => {\n      if (photo.id === id) {\n        return { ...photo, isFavorite: !photo.isFavorite }\n      }\n      return photo\n    })\n    setPhotos(updatedArr)\n  }\n\n  //function to add items to card\n  function addToCart(newItem) {\n    setCartItems(prevItems => [...prevItems, newItem])\n  }\n\n  //function to remove items from cartItems\n  function removeToCart(img) {\n    const newCartItems = cartItems.filter(item => item.id !== img.id)\n    setCartItems(newCartItems)\n  }\n\n  //clean the cart\n  function emptyCart() {\n    setCartItems([])\n  }\n\n  return (<Context.Provider value={{ photos,\n    toggleFavorite,\n    addToCart,\n    cartItems,\n    removeToCart,\n    emptyCart }}\n  // eslint-disable-next-line react/jsx-closing-bracket-location\n  >\n    {children} </Context.Provider>);\n}\n\nexport { Context, ContextProvider };\n","//import react and useContext hook\nimport React, { useContext } from 'react';\n\n//import context\nimport { Context } from '../context'\n\n//import Link component from react router dom, allow us to set values to switch\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  const { cartItems } = useContext(Context)\n\n  // eslint-disable-next-line eqeqeq\n  const showCartEmpty = () => (cartItems.length < 1 || cartItems == undefined ?\n    <i className='ri-shopping-cart-line ri-fw ri-2x' /> :\n    <i className='ri-shopping-cart-fill ri-fw ri-2x' />)\n  return (\n    <header>\n      <Link to='/'> <h2>Pic Some</h2> </Link>\n      <Link to='/cart'> {showCartEmpty()} </Link>\n    </header>\n  );\n}\n\nexport default Header;\n","//import react and use context hook\nimport React, { useContext } from 'react'\n\n//import context\nimport { Context } from '../context'\n\nfunction CartItem({ item }) {\n  const { removeToCart } = useContext(Context)\n\n  return (\n    <div className='cart-item'>\n      <i className='ri-delete-bin-line' onClick={() => removeToCart(item)}/>\n      <img src={item.url} width='130px' />\n      <p>$5.99</p>\n    </div>\n  )\n}\n\nexport default CartItem\n","//import react and its hook use context\nimport React, { useContext, useState } from 'react';\n\n//import context\nimport { Context } from '../context'\n\n//import component\nimport CartItem from '../components/CartItem'\n\nfunction Cart() {\n  //use state\n  const [buttonText, setButtonText] = useState('Place Order')\n\n  //use context\n  const { cartItems, emptyCart } = useContext(Context)\n\n  //calculate total price\n  const totalCost = 5.99 * cartItems.length\n  const totalCostDisplay = totalCost.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n\n  //map trough array of card items\n  const cartItemElements = cartItems.map(item => (\n    <CartItem key={item.id} item={item} />\n  ))\n\n  //show message if you don't have elements\n  // eslint-disable-next-line eqeqeq\n  const shoeElements = () => (cartItems.length < 1 || cartItems == undefined ?\n    <h3>You don't have any element in your cart, go back if you have add someone</h3> :\n    cartItemElements)\n\n  //place holder\n  function placeOrder() {\n    setButtonText('Ordering...')\n    setTimeout(() => {\n      console.log('Order placed!')\n      setButtonText('Place Order')\n      emptyCart()\n    }, 3000)\n  }\n  return (\n    <main className='cart-page'>\n      <h1>Check out</h1>\n      {shoeElements()}\n      <p className='total-cost'>{`Total: ${totalCostDisplay}`}</p>\n      <div className='order-button'>\n        <button onClick={placeOrder}>{buttonText}</button>\n      </div>\n    </main>\n  )\n}\n\nexport default Cart\n","//import react and import its hooks\nimport React, { useContext } from 'react';\n\n//import context\nimport { Context } from '../context';\n\n//import prop types\nimport PropTypes from 'prop-types';\n\nfunction Image({ className, img }) {\n\n  //with object destructuring get functions from context\n  const { toggleFavorite, addToCart, cartItems, removeToCart } = useContext(Context)\n\n  //const for display heart icon\n  const heartIcon = () => {\n    if (img.isFavorite) {\n      return <i className='ri-heart-fill favorite' onClick={() => toggleFavorite(img.id)}/>\n    }\n    return <i className='ri-heart-line favorite' onClick={() => toggleFavorite(img.id)} />\n  }\n\n  //const to display cart icon\n  const cartIcon = () => {\n    const isInTheCart = cartItems.some(item => item.id === img.id)\n\n    if (isInTheCart) {\n      return <i className='ri-shopping-cart-fill cart' onClick={() => removeToCart(img)}/>\n    }\n    return <i className='ri-add-circle-line cart' onClick={() => addToCart(img)}/>\n  }\n\n  return (\n    <div className={`${className} image-container`}>\n      <img\n        src={img.url}\n        className='image-grid'\n      />\n      {heartIcon()}\n      {cartIcon()}\n    </div>\n  );\n}\n\n//use prop types  for Image props\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool\n  })\n}\n\nexport default Image\n","export function getClass(i) {\n  if (i % 5 === 0) {\n    return 'big';\n  } else if (i % 6 === 0) {\n    return 'wide';\n  }\n}\n","//import react from react\nimport React, { useContext } from 'react';\n\n//import context from context\nimport { Context } from '../context';\n\n//import image component and utils\nimport Image from '../components/Image';\nimport { getClass } from '../utils';\n\nfunction Photos() {\n  //use react context hook\n  const { photos } = useContext(Context);\n\n  //map through images\n  const allImages = photos.map((img, i) => (\n    <Image key={img.id} img={img} className={getClass(i)} />)\n  );\n\n  return (\n    <main className='photos'>\n      {allImages}\n    </main>\n  );\n}\n\nexport default Photos;\n","//import react\nimport React from 'react';\n\n//import Switch and Route components from react router dom\nimport { Switch, Route } from 'react-router-dom';\n\n//import components\nimport Header from './components/Header';\nimport Cart from './pages/Cart';\nimport Photos from './pages/Photos';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n\n      <Switch>\n        <Route exact path='/'>\n          <Photos />\n        </Route>\n        <Route exact path='/cart'>\n          <Cart />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","//import react dependencies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n//import browser router from react-router-dom that allow us to implement as a provider trough our app\nimport { HashRouter as Router } from 'react-router-dom';\n\n//import context provider\nimport { ContextProvider } from './context'\n\n//import styles\nimport '../src/assets/styles/index.css';\n\n//import components\nimport App from './App';\n\nReactDOM.render(\n  <ContextProvider>\n    <Router basename='/'>\n      <App />\n    </Router>\n  </ContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}